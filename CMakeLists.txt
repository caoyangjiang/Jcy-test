cmake_minimum_required(VERSION 3.5)

set(CMAKE_DISABLE_SOURCE_CHANGES ON)
set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)

project(hvr-sample)

if(MSVC)
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
  set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install")
  set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

if(MSVC)
  if(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
    string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
  else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
  endif()
  #Disable warnings on Windows
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4127") # condition is constant
  #Enable additional warnings on Windows
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /WX /sdl")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44062")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44191")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44242")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44254")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44255")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44263")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44264")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44265")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44266")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44287")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44289")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44296")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44302")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44311")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44339")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44342")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44350")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44355")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44365")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44370")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44371")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44388")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44412")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44431")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44435")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44437")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44444")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44471")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44472")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44536")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44545")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44546")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44547")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44548")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44555")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44557")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44571")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44574")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44619")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44623")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44628")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44640")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44668")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44682")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44686")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44692")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44738")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44786")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44826")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44837")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44905")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44906")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44917")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44928")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44931")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44946")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44962")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44986")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44987")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w44988")
elseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Werror -fsigned-char")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -freg-struct-return -Wextra -ftree-vectorize -ftree-vectorizer-verbose=7")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wpointer-arith -Wcast-qual -Wshadow")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wpedantic -std=c++1y -mavx2 -mavx -pthread")
endif()


list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

option(DEBUG "Enable debugging information" OFF)

if(DEBUG)
  if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Winline")
  endif()
else()
  if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -DNDEBUG")
  endif()
endif()

message(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")

option(DOCUMENTATION "Create HTML based API documentation with Doxygen" OFF)

if(DOCUMENTATION)
  find_package(Doxygen)
  if(NOT DOXYGEN_FOUND)
    message(FATAL_ERROR "Doxygen is needed to build the documentation.")
  endif()

  file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/doc)
  add_custom_target(doc ALL
                    ${DOXYGEN_EXECUTABLE}
                    ${CMAKE_CURRENT_SOURCE_DIR}/doc/Doxyfile
                    WORKING_DIRECTORY
                    ${CMAKE_BINARY_DIR}/doc)
endif()

if(MSVC) # Disable warnings for external libraries on Visual Studio.
  add_definitions(/D
    "HVR_WINDOWS_DISABLE_ALL_WARNING=__pragma(warning(push,0))")
  add_definitions(/D
    "HVR_WINDOWS_ENABLE_ALL_WARNING=__pragma(warning(pop))")
else()
  add_definitions(-DHVR_WINDOWS_DISABLE_ALL_WARNING=)
  add_definitions(-DHVR_WINDOWS_ENABLE_ALL_WARNING=)
  add_definitions(-DHVR_WINDOWS_DLL_API=)
endif()

message(HVR_WINDOWS_ENABLE_ALL_WARNING)
add_subdirectory(modules)
add_subdirectory(apps)